import { useContext, useEffect, useState } from "react";
import classNames from "classnames";
import { X as CloseIcon, Check, BellRing, Search, Volume2 } from "lucide-react";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Switch } from "@/components/ui/switch";
import { getWord } from "@/utils/api";
import { WordDict } from "@/types";
import { PlayerContext } from "@/store";
import { handleRespWithNotifySuccess } from "@/utils/handle_resp";
import usePronunciationSound from "@/hooks/usePronunciation";

interface DictItemProps {
  label: string;
  texts: string[];
}

const DictItem = ({ label, texts }: DictItemProps) => {
  if (texts.length == 0) return null;
  if (texts[0].length == 0) return null;

  return (
    <div>
      <div className="mt-4 mb-2 font-bold">{label}</div>
      {texts.map((text, index) => (
        <div
          key={index}
          className="mb-4 grid grid-cols-[25px_1fr] items-start pb-4 last:mb-0 last:pb-0"
        >
          <span className="flex h-2 w-2 translate-y-1 rounded-full bg-sky-500" />
          <div className="space-y-1">
            <p className="text-sm font-medium leading-none">{text}</p>
            {/* <p className="text-sm text-muted-foreground">
                {notification.description}
              </p> */}
          </div>
        </div>
      ))}
    </div>
  );
};
export const Dict = () => {
  const [open, setOpen] = useState(false);
  const [wordDict, setWordDict] = useState<WordDict>();
  const { searchWord, searchSent } = useContext(PlayerContext);
  const { play, stop, isPlaying } = usePronunciationSound(searchWord, true);

  const close = () => {
    setOpen(false);
  };

  const playWord = () => {
    stop();
    play();
  };

  useEffect(() => {
    searchWord && setOpen(true);
  }, [searchWord]);

  useEffect(() => {
    if (!searchWord || !searchSent) return;

    const handleGetWord = async () => {
      const resp = await getWord(searchWord, searchSent);

      handleRespWithNotifySuccess(resp, (data) => {
        setWordDict(resp.data);
      });
    };

    handleGetWord();
  }, [searchWord, searchSent]);

  return (
    <div
      className={classNames(
        "w-[300px] h-full fixed right-0 z-10 bg-white p-4",
        open ? "block" : "hidden"
      )}
    >
      <div className="flex flex-col">
        <Card className={"w-full"}>
          <CardHeader>
            <div className="flex items-center justify-between">
              <div className="div flex space-x-1">
                <CardTitle>{searchWord}</CardTitle>
                <button onClick={playWord}>
                  <Volume2 />
                </button>
              </div>
              <button
                className="border-2 border-gray-300 rounded-sm"
                onClick={close}
              >
                <CloseIcon />
              </button>
            </div>
            <CardDescription>{wordDict?.pron}</CardDescription>
          </CardHeader>
          <CardContent className="grid gap-4">
            <div className=" flex items-center space-x-4 rounded-md border p-4">
              <BellRing />
              <div className="flex-1 space-y-1">
                <p className="text-sm font-medium leading-none">收藏</p>
                <p className="text-sm text-muted-foreground">加入收藏夹</p>
              </div>
              <Switch />
            </div>
            <div>
              <DictItem label={"定义"} texts={[wordDict?.definition || ""]} />
              <DictItem
                label={"词的原始含义"}
                texts={[wordDict?.original || ""]}
              />
              <DictItem
                label={"词的上下文含义"}
                texts={[wordDict?.meaning || ""]}
              />
              <DictItem label={"解释"} texts={[wordDict?.explain || ""]} />
              <DictItem label={"词性"} texts={[wordDict?.class || ""]} />
              <DictItem label={"例句"} texts={wordDict?.examples || []} />
              <DictItem label={"语义"} texts={wordDict?.others || []} />
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};
